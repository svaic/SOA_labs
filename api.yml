swagger: '2.0'
info:
  title: Shop Example API
  version: "0.1"
  description: Simple example API
consumes:
  - application/json
produces:
  - application/json
basePath: "/api"
paths:
  /students/:
    get:
      tags: [ Student, all ]
      operationId: app.get_students
      responses:
        200:
          description: Return list of students
        404:
          description: No students found

  /student:
    post:
      tags: [ Student ]
      operationId: app.student_add
      parameters:
        - $ref: '#/parameters/student_body'
      responses:
        200:
          description: Return status
        409:
          description: Already exists

  /student/{student_id}:
    get:
      tags: [ Student, read ]
      operationId: app.find_student
      parameters:
        - $ref: '#/parameters/student_id'
      responses:
        200:
          description: Return student object
        404:
          description: student not found

  /student/{student_id}/edit:
      post:
        tags: [ Student, edit ]
        operationId: app.edit_student
        parameters:
          - $ref: '#/parameters/student_id'
          - $ref: '#/parameters/student_body'
        responses:
          200:
            description: Return student object
          404:
            description: student not found

  /student/{student_id}/add_course:
    post:
      tags: [ course, add ]
      operationId: app.add_course
      parameters:
        - $ref: '#/parameters/student_id'
        - $ref: '#/parameters/course_body'
      responses:
        200:
          description: Return course object
        403:
          description: Error creating course

  /student/{student_id}/delete:
    post:
      tags: [ student, delete ]
      operationId: app.delete_student
      parameters:
        - $ref: '#/parameters/student_id'
      responses:
        200:
          description: Return deleted student object
        404:
          description: student not found

  /courses/:
    get:
      tags: [ course, all ]
      operationId: app.get_courses
      responses:
        200:
          description: Return all course object
        404:
          description: No courses found

  /course/{course_id}:
      get:
        tags: [ course, read ]
        operationId: app.find_course
        parameters:
          - $ref: '#/parameters/course_id'
        responses:
          200:
            description: Return course object
          404:
            description: Course not found

  /course/{course_id}/edit:
    post:
      tags: [ course, edit ]
      operationId: app.edit_course
      parameters:
        - $ref: '#/parameters/course_id'
        - $ref: '#/parameters/course_body'
      responses:
        200:
          description: Return course object
        404:
          description: Course not found

  /course/{course_id}/delete:
    post:
      tags: [ course, delete ]
      operationId: app.delete_course
      parameters:
        - $ref: '#/parameters/course_id'
      responses:
        200:
          description: Return course object
        404:
          description: Course not found



parameters:

  student_body:
    name: student_body
    description: parameters required for creation of student
    in: body
    schema:
      properties:
        name:
          type: string
        surname:
          type: string

  course_body:
    name: course_body
    description: parameters required for creation of course
    in: body
    schema:
      properties:
        name:
          type: string


  student_id:
    name: student_id
    description: The id of the student we're looking for
    in: path
    required: true
    type: integer

  course_id:
    name: course_id
    description: The id of the course we're looking for
    in: path
    required: true
    type: integer

